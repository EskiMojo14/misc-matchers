// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`objectContainingOnly > should check if object contains only the expected properties 1`] = `expected { a: 1, b: 2 } to deeply equal objectContainingOnly<[object Object]>`;

exports[`objectContainingOnly > should check if object contains only the expected properties 2`] = `expected { a: 1, b: 2 } to deeply equal objectContainingOnly<[object Object]>`;

exports[`objectContainingOnly > should check if object contains only the expected properties 3`] = `expected { a: 1, b: 2 } to deeply equal not.objectContainingOnly{â€¦}`;

exports[`objectContainingOnly > should throw an error if expected value is not an object 1`] = `
<d>expect(</b><r>received</g><d>).</b>objectContainingOnly<d>(</b><g>1</g><d>)</b>

<b>Matcher error</b>: <g>Expected</g> value must be an object

Expected has type:  number
Expected has value: 1
`;

exports[`objectContainingOnly > should throw an error if received value is not an object 1`] = `expected 1 to deeply equal objectContainingOnly<[object Object]>`;
