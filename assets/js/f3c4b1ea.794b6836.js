"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[929],{8997:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>h});var n=s(2540),c=s(3023),i=s(2317);const r={sidebar_position:2},a="expect.typeOf(type)",o={id:"matchers/typeOf",title:"expect.typeOf(type)",description:"An asymmetric matcher that checks if the received value is of the specified type, using typeof.",source:"@site/docs/matchers/typeOf.mdx",sourceDirName:"matchers",slug:"/matchers/typeOf",permalink:"/mix-n-matchers/matchers/typeOf",draft:!1,unlisted:!1,editUrl:"https://github.com/EskiMojo14/mix-n-matchers/tree/main/website/docs/matchers/typeOf.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"expect.exactly(value)",permalink:"/mix-n-matchers/matchers/exactly"},next:{title:"expect.oneOf(...values)",permalink:"/mix-n-matchers/matchers/oneOf"}},p={},h=[];function m(e){const t={code:"code",h1:"h1",p:"p",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"expecttypeoftype",children:(0,n.jsx)(t.code,{children:"expect.typeOf(type)"})}),"\n",(0,n.jsxs)(t.p,{children:["An asymmetric matcher that checks if the received value is of the specified type, using ",(0,n.jsx)(t.code,{children:"typeof"}),"."]}),"\n",(0,n.jsx)(i.Z,{name:"exactly",children:'\nit("is of the correct type", () => {\n  const values = {\n    number: 1,\n    string: "hello",\n    boolean: true,\n  };\n  expect(values).toEqual({\n    number: expect.typeOf("number"),\n    string: expect.typeOf("string"),\n    boolean: expect.typeOf("boolean"),\n  });\n});\n'})]})}function l(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);