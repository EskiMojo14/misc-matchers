"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[199],{4269:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var n=r(2540),s=r(3023),a=r(8296),i=r(2491);const c={sidebar_position:1,slug:"/"},l="Setup",o={id:"setup",title:"Setup",description:"Mix 'n' Matchers is a set of custom Jest matchers, aiming to fill perceived gaps in the Jest matcher ecosystem. This guide will help you get started.",source:"@site/docs/setup.mdx",sourceDirName:".",slug:"/",permalink:"/mix-n-matchers/",draft:!1,unlisted:!1,editUrl:"https://github.com/EskiMojo14/mix-n-matchers/tree/main/website/docs/setup.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"docs",next:{title:"expect.exactly(value)",permalink:"/mix-n-matchers/matchers/exactly"}},m={},h=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Automatic setup",id:"automatic-setup",level:3},{value:"Manual setup",id:"manual-setup",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"setup",children:"Setup"}),"\n",(0,n.jsx)(t.p,{children:"Mix 'n' Matchers is a set of custom Jest matchers, aiming to fill perceived gaps in the Jest matcher ecosystem. This guide will help you get started."}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.p,{children:"Install with your package manager of choice:"}),"\n","\n",(0,n.jsxs)(a.A,{groupId:"package-manager",children:[(0,n.jsx)(i.A,{value:"npm",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"\r\nnpm install -D mix-n-matchers\r\n\n"})})}),(0,n.jsx)(i.A,{value:"yarn",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"\r\nyarn add -D mix-n-matchers\r\n\n"})})}),(0,n.jsx)(i.A,{value:"bun",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"\r\nbun add -D mix-n-matchers\r\n\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(t.h3,{id:"automatic-setup",children:"Automatic setup"}),"\n",(0,n.jsx)(t.p,{children:"The easiest way to add the matchers to your environment is by importing one of the automatic setup files, which will add all of the matchers for you."}),"\n",(0,n.jsx)(t.p,{children:"Import one of these into a setup file, and include that setup file in your Jest/Vitest configuration. Using this setup will also ensure that the matchers are available in your TypeScript files."}),"\n",(0,n.jsxs)(a.A,{groupId:"test-runner",children:[(0,n.jsxs)(i.A,{value:"Jest",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport "mix-n-matchers/all";\r\n\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"\r\nimport type { Config } from 'jest';\r\n\r\nconst config: Config = {\r\n  setupFilesAfterEnv: [\"<rootDir>/test-setup.ts\"]\r\n};\r\n\r\nexport default config;\r\n\n"})})]}),(0,n.jsxs)(i.A,{value:"Jest (no globals)",children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport "mix-n-matchers/jest-globals";\r\n\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"\r\nimport type { Config } from 'jest';\r\n\r\nconst config: Config = {\r\n  injectGlobals: false,\r\n  setupFilesAfterEnv: [\"<rootDir>/test-setup.ts\"]\r\n};\r\n\r\nexport default config;\r\n\n"})})]}),(0,n.jsxs)(i.A,{value:"Vitest",children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport "mix-n-matchers/vitest";\r\n\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="vitest.config.ts"',children:'\r\nexport default defineConfig({\r\n  test: {\r\n    setupFiles: ["./test-setup.ts"],\r\n  },\r\n})\r\n\n'})})]})]}),"\n",(0,n.jsx)(t.h3,{id:"manual-setup",children:"Manual setup"}),"\n",(0,n.jsx)(t.p,{children:"If you'd prefer to add the matchers manually, you can import the individual matchers as needed into your setup file."}),"\n",(0,n.jsxs)(a.A,{groupId:"test-runner",children:[(0,n.jsx)(i.A,{value:"Jest",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'import {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n} from "mix-n-matchers";\r\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare global {\r\n  namespace jest {\r\n    interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {}\r\n\r\n    interface Expect extends AsymmetricMixNMatchersFrom<typeof matchers> {}\r\n\r\n    interface InverseAsymmetricMatchers\r\n      extends AsymmetricMixNMatchersFrom<typeof matchers> {}\r\n  }\r\n}\r\n\n'})})}),(0,n.jsx)(i.A,{value:"Jest (no globals)",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport { expect } from "@jest/globals";\r\nimport {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n} from "mix-n-matchers";\r\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare module "@jest/expect" {\r\n  interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {}\r\n  interface AsymmetricMatchers\r\n    extends AsymmetricMixNMatchersFrom<typeof matchers> {}\r\n}\r\n\n'})})}),(0,n.jsx)(i.A,{value:"Vitest",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport { expect } from "vitest";\r\nimport {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n} from "mix-n-matchers";\r\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  toBeCalledWithContext,\r\n  lastCalledWithContext,\r\n  nthCalledWithContext,\r\n  exactly,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare module "vitest" {\r\n  interface Assertion<T> extends MixNMatchersFrom<typeof matchers, void, T> {}\r\n  interface AsymmetricMatchersContaining\r\n    extends AsymmetricMixNMatchersFrom<typeof matchers> {}\r\n}\r\n\n'})})})]}),"\n",(0,n.jsxs)(t.admonition,{title:"Asymmetric Matchers vs Symmetric Matchers",type:"note",children:[(0,n.jsxs)(t.p,{children:["When ",(0,n.jsx)(t.code,{children:"expect.extend"})," is called, each matcher is added as both an asymmetric and symmetric matcher."]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'expect.extend({\r\n  foo(received) {\r\n    const pass = received === "foo";\r\n    return {\r\n      pass,\r\n      message: pass ? () => "Expected \'foo\'" : () => "Expected not \'foo\'",\r\n    };\r\n  },\r\n});\r\n\r\nexpect(value).foo(); // symmetric\r\n\r\nexpect(value).toEqual(expect.foo()); // asymmetric\n'})}),(0,n.jsxs)(t.p,{children:["However, conventionally there is a difference in how these matchers are named. For example, ",(0,n.jsx)(t.code,{children:".toBeAnArray()"})," vs ",(0,n.jsx)(t.code,{children:"expect.array()"}),"."]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"mix-n-matchers"})," intentionally only exposes types for matchers as ",(0,n.jsx)(t.em,{children:"either"})," asymmetric or symmetric, and not both. Sometimes a matcher is available as both, but with different names. For example, ",(0,n.jsxs)(t.a,{href:"/matchers/enums",children:[(0,n.jsx)(t.code,{children:".toBeEnum()"})," and ",(0,n.jsx)(t.code,{children:"expect.ofEnum"})]}),"."]}),(0,n.jsx)(t.p,{children:"This helps to avoid confusion and makes it clear which matchers are designed to be asymmetric and which are symmetric."}),(0,n.jsx)(t.p,{children:"If there's any existing matchers that are only available as asymmetric matchers and you'd like to use them as symmetric matchers (or vice versa), please open an issue or a pull request!"}),(0,n.jsx)(t.p,{children:"You can of course choose to setup the matchers as both asymmetric and symmetric matchers if you prefer."}),(0,n.jsxs)(a.A,{groupId:"test-runner",children:[(0,n.jsx)(i.A,{value:"Jest",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'import { typeOf, toBeCalledWithContext } from "mix-n-matchers";\r\nimport type { \r\n  MixNMatchers,\r\n  MixNMatchersFrom,\r\n  AsymmetricMixNMatchers,\r\n  AsymmetricMixNMatchersFrom\r\n} from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  typeOf,\r\n  toBeTypeOf: typeOf,\r\n  toBeCalledWithContext,\r\n  calledWithContext: toBeCalledWithContext,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare global {\r\n  namespace jest {\r\n    interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {\r\n      toBeTypeOf: AsymmetricMixNMatchers["typeOf"];\r\n    }\r\n\r\n    interface Expect extends AsymmetricMixNMatchersFrom<typeof matchers> {\r\n        calledWithContext: MixNMatchers<void, any>["toBeCalledWithContext"];\r\n    }\r\n\r\n    interface InverseAsymmetricMatchers\r\n      extends AsymmetricMixNMatchersFrom<typeof matchers> {\r\n        calledWithContext: MixNMatchers<void, any>["toBeCalledWithContext"];\r\n    }\r\n  }\r\n}\r\n\n'})})}),(0,n.jsx)(i.A,{value:"Jest (no globals)",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport { expect } from "@jest/globals";\r\nimport { typeOf, toBeCalledWithContext } from "mix-n-matchers";\r\nimport type {\r\n  MixNMatchers,\r\n  MixNMatchersFrom,\r\n  AsymmetricMixNMatchers,\r\n  AsymmetricMixNMatchersFrom\r\n} from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  typeOf,\r\n  toBeTypeOf: typeOf,\r\n  toBeCalledWithContext,\r\n  calledWithContext: toBeCalledWithContext,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare module "@jest/expect" {\r\n  interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {\r\n      toBeTypeOf: AsymmetricMixNMatchers["typeOf"];\r\n  }\r\n  interface AsymmetricMatchers extends AsymmetricMixNMatchersFrom<typeof matchers> {\r\n      calledWithContext: MixNMatchers<void, any>["toBeCalledWithContext"];\r\n  }\r\n}\r\n\n'})})}),(0,n.jsx)(i.A,{value:"Vitest",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\r\nimport { expect } from "vitest";\r\nimport { typeOf, toBeCalledWithContext } from "mix-n-matchers";\r\nimport type { \r\n  MixNMatchers,\r\n  MixNMatchersFrom,\r\n  AsymmetricMixNMatchers,\r\n  AsymmetricMixNMatchersFrom\r\n} from "mix-n-matchers";\r\n\r\nconst matchers = {\r\n  typeOf,\r\n  toBeTypeOf: typeOf,\r\n  toBeCalledWithContext,\r\n  calledWithContext: toBeCalledWithContext,\r\n};\r\n\r\nexpect.extend(matchers);\r\n\r\ndeclare module "vitest" {\r\n  interface Assertion<T> extends MixNMatchersFrom<typeof matchers, void, T> {\r\n      toBeTypeOf: AsymmetricMixNMatchers["typeOf"];\r\n  }\r\n  interface AsymmetricMatchersContaining\r\n    extends AsymmetricMixNMatchersFrom<typeof matchers> {\r\n      calledWithContext: MixNMatchers<void, any>["toBeCalledWithContext"];\r\n  }\r\n}\r\n\n'})})})]})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2491:(e,t,r)=>{r.d(t,{A:()=>i});r(3696);var n=r(1750);const s={tabItem:"tabItem_wHwb"};var a=r(2540);function i(e){let{children:t,hidden:r,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,i),hidden:r,children:t})}},8296:(e,t,r)=>{r.d(t,{A:()=>b});var n=r(3696),s=r(1750),a=r(766),i=r(9519),c=r(4395),l=r(5043),o=r(4544),m=r(8708);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function u(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function x(e){let{queryString:t=!1,groupId:r}=e;const s=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(s.location.search);t.set(a,e),s.replace({...s.location,search:t.toString()})}),[a,s])]}function p(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,a=d(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[o,h]=x({queryString:r,groupId:s}),[p,f]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,a]=(0,m.Dv)(r);return[s,(0,n.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:s}),y=(()=>{const e=o??p;return u({value:e,tabValues:a})?e:null})();(0,c.A)((()=>{y&&l(y)}),[y]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!u({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),f(e)}),[h,f,a]),tabValues:a}}var f=r(6681);const y={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var g=r(2540);function M(e){let{className:t,block:r,selectedValue:n,selectValue:i,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),m=e=>{const t=e.currentTarget,r=l.indexOf(t),s=c[r].value;s!==n&&(o(t),i(s))},h=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t),children:c.map((e=>{let{value:t,label:r,attributes:a}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:h,onClick:m,...a,className:(0,s.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function j(e){let{lazy:t,children:r,selectedValue:s}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function v(e){const t=p(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",y.tabList),children:[(0,g.jsx)(M,{...t,...e}),(0,g.jsx)(j,{...t,...e})]})}function b(e){const t=(0,f.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(t))}}}]);