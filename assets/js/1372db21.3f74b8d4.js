"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[397],{8393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>r,frontMatter:()=>a,metadata:()=>h,toc:()=>d});var c=n(2540),o=n(3023),l=n(2317);const a={},s="Mocks",h={id:"matchers/mocks",title:"Mocks",description:".toHaveBeenCalledWithContext(context)",source:"@site/docs/matchers/mocks.mdx",sourceDirName:"matchers",slug:"/matchers/mocks",permalink:"/mix-n-matchers/matchers/mocks",draft:!1,unlisted:!1,editUrl:"https://github.com/EskiMojo14/mix-n-matchers/tree/main/website/docs/matchers/mocks.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Enums",permalink:"/mix-n-matchers/matchers/enums"}},i={},d=[{value:"<code>.toHaveBeenCalledWithContext(context)</code>",id:"tohavebeencalledwithcontextcontext",level:2},{value:"<code>.toHaveBeenLastCalledWithContext(context)</code>",id:"tohavebeenlastcalledwithcontextcontext",level:2},{value:"<code>.toHaveBeenNthCalledWithContext(nthCall, context)</code>",id:"tohavebeennthcalledwithcontextnthcall-context",level:2}];function x(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h1,{id:"mocks",children:"Mocks"}),"\n",(0,c.jsx)(t.h2,{id:"tohavebeencalledwithcontextcontext",children:(0,c.jsx)(t.code,{children:".toHaveBeenCalledWithContext(context)"})}),"\n",(0,c.jsxs)(t.p,{children:["Also under the alias ",(0,c.jsx)(t.code,{children:".toBeCalledWithContext(context)"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["Use ",(0,c.jsx)(t.code,{children:".toHaveBeenCalledWithContext"})," to assert that a mock function was called with a specific context (",(0,c.jsx)(t.code,{children:"this"})," value)."]}),"\n",(0,c.jsx)(l.Z,{name:"toBeCalledWithContext",children:'\nconst mock = jest.fn();\nconst context = {};\n\nmock.call(context);\n\nit("was called with the context", () => {\n  expect(mock).toBeCalledWithContext(context);\n  expect(mock).toHaveBeenCalledWithContext(context);\n});\n'}),"\n",(0,c.jsx)(t.h2,{id:"tohavebeenlastcalledwithcontextcontext",children:(0,c.jsx)(t.code,{children:".toHaveBeenLastCalledWithContext(context)"})}),"\n",(0,c.jsxs)(t.p,{children:["Also under the alias ",(0,c.jsx)(t.code,{children:".lastCalledWithContext(context)"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["Use ",(0,c.jsx)(t.code,{children:".toHaveBeenLastCalledWithContext"})," to assert that a mock function was last called with a specific context (",(0,c.jsx)(t.code,{children:"this"})," value)."]}),"\n",(0,c.jsx)(l.Z,{name:"lastCalledWithContext",children:'\n\nconst mock = jest.fn();\nconst context = {};\n\nmock.call({});\nmock.call(context);\n\nit("was last called with the context", () => {\n  expect(mock).lastCalledWithContext(context);\n  expect(mock).toHaveBeenLastCalledWithContext(context);\n});\n'}),"\n",(0,c.jsx)(t.h2,{id:"tohavebeennthcalledwithcontextnthcall-context",children:(0,c.jsx)(t.code,{children:".toHaveBeenNthCalledWithContext(nthCall, context)"})}),"\n",(0,c.jsxs)(t.p,{children:["Also under the alias ",(0,c.jsx)(t.code,{children:".nthCalledWithContext(nthCall, context)"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["Use ",(0,c.jsx)(t.code,{children:".toHaveBeenNthCalledWithContext"})," to assert that a mock function was called at a specific index with a specific context (",(0,c.jsx)(t.code,{children:"this"})," value)."]}),"\n",(0,c.jsx)(l.Z,{name:"nthCalledWithContext",children:'\nconst mock = jest.fn();\nconst context = {};\n\nmock.call({});\nmock.call(context);\nmock.call({});\n\nit("was nth called with the context", () => {\n  expect(mock).nthCalledWithContext(2, context);\n  expect(mock).toHaveBeenNthCalledWithContext(2, context);\n});\n'})]})}function r(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}}}]);